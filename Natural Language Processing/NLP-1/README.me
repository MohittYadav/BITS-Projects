This project addresses two core areas of Natural Language Processing: Language Modeling and Feature Extraction/Similarity Analysis.

ðŸ“Š Project Overview<br>
This repository contains the solution for a two-part NLP assignment focused on implementing foundational techniques for text processing and analysis.

Part I implements an N-gram Language Model for sentence completion.

Part II involves a complete text processing pipeline, including feature extraction and similarity analysis to identify related documents.

âœ¨ Key Features & Results<br> 
Part I: N-gram Language Model<br>
Implemented a Bigram N-gram Language Model using the entire corpus as training data.

Successfully predicted and recommended the top 3 words to complete the test sentence: "I like ".

Part II: Preprocessing, Vectorization, and Similarity<br>
Comprehensive Text Preprocessing: Executed sequential steps: Tokenization, Lowercasing, Stop Words Removal, Stemming, and Lemmatization.

Feature Extraction: Transformed the processed text into numerical vectors using the TF-IDF (Term Frequency-Inverse Document Frequency) method.

Similarity Analysis:

Identified and printed the top two most similar documents based on their vectorized representations.

Justified the choice of the similarity metric (e.g., Cosine Similarity).

Visualized a subset of the TF-IDF document vectors in a 2D semantic space using Principal Component Analysis (PCA).
